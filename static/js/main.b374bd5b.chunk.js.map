{"version":3,"sources":["Components/AccountBalance.js","Components/Home.js","Components/UserProfile.js","Components/Login.js","Components/infoBox.jsx","Components/debit.jsx","Components/credit.jsx","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","react_default","a","createElement","this","props","accountBalance","Component","Home","className","src","alt","debits","Components_AccountBalance","credits","react_router_dom","to","UserProfile","id","userName","memberSince","LogIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","updatedUser","objectSpread","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","react_router","onSubmit","htmlFor","type","onChange","required","React","Infobox","credit","description","amount","date","DebitPage","data","total","des","amo","key","desChange","_callee","ev","regenerator_default","wrap","_context","prev","next","console","log","stop","amoChange","_callee2","_context2","parseFloat","genkey","addcredit","_callee3","_context3","push","axios","get","res","sum","i","length","debitBalance","map","ct","Components_infoBox","onClick","CreditPage","componentDidMount","sent","_callee4","_context4","App","CreditBalance","currentUser","_this2","logInInfo","newUser","updateAcc","input","updateDeb","basename","exact","path","render","Components_Login","assign","src_Components_Home","src_Components_UserProfile","debit","Components_credit","creditBalance","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b374bd5b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n              Balance: {this.props.accountBalance}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountBalance;","import React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Home\">\r\n                <img src= \"https://code.fb.com/wp-content/uploads/2016/02/gev5wqc6bdmxibegag-eayeaaaaabj0jaaab.jpg\" alt= \"bank\"/>\r\n                <h1>Bank of React</h1>\r\n                <p> Debit Total: {this.props.debits}</p>\r\n                <AccountBalance accountBalance={this.props.accountBalance}/>\r\n                <p> Credits Total: {this.props.credits}</p>\r\n                <Link to=\"/userProfile\">User Profile</Link>\r\n                <Link to=\"/debit\"> Debit</Link>\r\n                <Link to=\"/credit\"> Credit</Link>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './UserProfile.css';\r\n\r\nclass UserProfile extends Component {\r\n    render(){\r\n        return(\r\n            <div id=\"userProfile\">\r\n              <h1>User Profile</h1>\r\n              <div>Username: {this.props.userName}</div>\r\n              <div>Member Since: {this.props.memberSince}</div>\r\n              <Link to=\"/\">Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile;","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './Login.css';\r\n\r\nclass LogIn extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            user: {\r\n                userName: '',\r\n                password: ''\r\n            },\r\n            redirect: false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const updatedUser = {...this.state.user}\r\n        const inputField = e.target.name\r\n        const inputValue = e.target.value\r\n      updatedUser[inputField] = inputValue\r\n\r\n      this.setState({user: updatedUser})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.mockLogIn(this.state.user);\r\n        this.setState({redirect: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/userProfile\"/>)\r\n        }\r\n        return (\r\n          <div className=\"LogIn\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div>\r\n                <label htmlFor=\"userName\">User Name: </label>\r\n                <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} required/>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"password\">Password: </label>\r\n                <input type=\"password\" name=\"password\" required/>\r\n                {/*The min length fields are not working as intended\r\n                  Replaced with required*/}\r\n              </div>\r\n              <button>Log In</button>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;","import React, { Component } from \"react\";\r\nimport \"./infoBox.css\";\r\n\r\nclass Infobox extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"boxbody\">\r\n        <div className=\"info\">{this.props.credit.description}</div>\r\n        <div className=\"info\">Amount: {this.props.credit.amount}</div>\r\n        <div className=\"info\">Date: {this.props.credit.date}</div>\r\n        {/* <div className=\"info\">Total Wages: ~{this.props.city.TotalWages}</div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Infobox;\r\n","import \"./credit.css\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Infobox from \"./infoBox\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass DebitPage extends Component {\r\n  state = { data: [], total: 0, des: \"\", amo: \"\", key: 7867 };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://moj-api.herokuapp.com/debits\");\r\n    await this.setState({ data: res.data });\r\n    let sum = 0;\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      sum += this.state.data[i].amount; // ?? 怎么await for\r\n    }\r\n    await this.setState({ total: sum });\r\n    console.log(this.state.total);\r\n  }\r\n  desChange = async ev => {\r\n    await this.setState({ des: ev.target.value });\r\n    console.log(this.state.des);\r\n  };\r\n  amoChange = async ev => {\r\n    await this.setState({ amo: parseFloat(ev.target.value) });\r\n    console.log(this.state.amo);\r\n  };\r\n  genkey = () => {\r\n    this.state.key++;\r\n    return this.state.key;\r\n  };\r\n  addcredit = async ev => {\r\n    // console.log(typeof this.state.des);\r\n    if (this.state.amo && this.state.des) {\r\n      this.state.data.push({\r\n        amount: this.state.amo,\r\n        description: this.state.des,\r\n        date: \"2019-07-30T11:30:06.921Z\",\r\n        id: this.genkey()\r\n      });\r\n      await this.setState({ data: this.state.data });\r\n    }\r\n    // console.log(this.state.data[3]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"whole\">\r\n        <h1>Debit: {this.props.debitBalance}</h1>\r\n        <h3>Account Balance: {this.props.accountBalance}</h3>\r\n        <h3>Total Debits: {this.state.total}</h3>\r\n        {/* <Inputbar change={this.updateZip} search={this.search} /> */}\r\n\r\n        <div className=\"disbox\">\r\n          {/* {this.state.invalid && <h2>Invalid zip</h2>} */}\r\n          {this.state.data.length > 0 &&\r\n            this.state.data.map(ct => <Infobox key={ct.id} credit={ct} />)}\r\n        </div>\r\n        <div className=\"inputbox\">\r\n          <h6>Credit Description</h6>\r\n          <input onChange={this.desChange} type=\"text\" />\r\n          <h6>Credit Amount</h6>\r\n          <input onChange={this.amoChange} type=\"text\" />\r\n          <div>\r\n            <button onClick={this.addcredit}>Add Credit</button>\r\n            {/* 怎么视角自动跟踪 ！！ */}\r\n            <Link to=\"/\">Back to Homepage</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DebitPage;\r\n","import \"./credit.css\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Infobox from \"./infoBox\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CreditPage extends Component {\r\n  state = { data: [], total: 0, des: \"\", amo: \"\", key: 666 };\r\n\r\n  componentDidMount = async () => {\r\n    const res = await axios.get(\"https://moj-api.herokuapp.com/credits\");\r\n    await this.setState({ data: res.data });\r\n    let sum = 0;\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      sum += this.state.data[i].amount; // ?? 怎么await for\r\n    }\r\n    await this.setState({ total: sum });\r\n    console.log(this.state.total);\r\n  };\r\n  desChange = async ev => {\r\n    await this.setState({ des: ev.target.value });\r\n    console.log(this.state.des);\r\n  };\r\n  amoChange = async ev => {\r\n    await this.setState({ amo: parseFloat(ev.target.value) });\r\n    console.log(this.state.amo);\r\n  };\r\n  genkey = () => {\r\n    this.state.key++;\r\n    return this.state.key;\r\n  };\r\n  addcredit = async ev => {\r\n    // console.log(typeof this.state.des);\r\n    if (this.state.amo && this.state.des) {\r\n      this.state.data.push({\r\n        amount: this.state.amo,\r\n        description: this.state.des,\r\n        date: \"2019-07-30T11:30:06.921Z\",\r\n        id: this.genkey()\r\n      });\r\n      await this.setState({ data: this.state.data });\r\n    }\r\n    // console.log(this.state.data[3]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"whole\">\r\n        <h1>Credit</h1>\r\n        <h3>Account Balance: {this.props.accountBalance}</h3>\r\n        <h3>Total Credits: {this.state.total}</h3>\r\n        {/* <Inputbar change={this.updateZip} search={this.search} /> */}\r\n\r\n        <div className=\"disbox\">\r\n          {/* {this.state.invalid && <h2>Invalid zip</h2>} */}\r\n          {this.state.data.length > 0 &&\r\n            this.state.data.map(ct => <Infobox key={ct.id} credit={ct} />)}\r\n        </div>\r\n        <div className=\"inputbox\">\r\n          <h6>Credit Description</h6>\r\n          <input onChange={this.desChange} type=\"text\" />\r\n          <h6>Credit Amount</h6>\r\n          <input onChange={this.amoChange} type=\"text\" />\r\n          <div>\r\n            <button onClick={this.addcredit}>Add Credit</button>\r\n            {/* 怎么视角自动跟踪 ！！ */}\r\n            <Link to=\"/\">Back to Homepage</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreditPage;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport UserProfile from \"./Components/UserProfile\";\r\nimport LogIn from \"./Components/Login\";\r\nimport DebitPage from \"./Components/debit\";\r\nimport CreditPage from \"./Components/credit\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      accountBalance: 14568.27,\r\n      debitBalance: 4255.99,\r\n      CreditBalance: 1998.27,\r\n      currentUser: {\r\n        userName: \"bob_loblaw\",\r\n        memberSince: \"08/23/99\"\r\n      }\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const HomeComponent = () => (\r\n      <Home\r\n        accountBalance={this.state.accountBalance}\r\n        debits={this.state.debitBalance}\r\n        credits={this.state.CreditBalance}\r\n      />\r\n    );\r\n    const UserProfileComponent = () => (\r\n      <UserProfile\r\n        userName={this.state.currentUser.userName}\r\n        memberSince={this.state.currentUser.memberSince}\r\n      />\r\n    );\r\n    const mockLogIn = logInInfo => {\r\n      const newUser = { ...this.state.currentUser };\r\n      newUser.userName = logInInfo.userName;\r\n      this.setState({ currentUser: newUser });\r\n    };\r\n    const LogInComponent = () => (\r\n      <LogIn\r\n        user={this.state.currentUser}\r\n        mockLogIn={mockLogIn}\r\n        {...this.props}\r\n      />\r\n    );\r\n\r\n    const updateAcc = (input) => {\r\n      this.setState({\r\n        accountBalance : input\r\n      })\r\n    }\r\n  \r\n    const updateDeb = (input) => {\r\n      this.setState({\r\n        debitBalance : input\r\n      })\r\n    }\r\n    const DebitComponent = () => (\r\n      <DebitPage\r\n        debitBalance={this.state.debitBalance}\r\n        accountBalance={this.state.accountBalance}\r\n        updateAcc={updateAcc}\r\n        updateDeb={updateDeb}\r\n      />\r\n    );\r\n    const CreditComponent = () => (\r\n      <CreditPage\r\n        creditBalance={this.state.creditBalance}\r\n        accountBalance={this.state.accountBalance}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Router basename=\"/Bank-of-React\">\r\n        {/* <div> */}\r\n        <Route exact path=\"/login\" render={LogInComponent} />\r\n        <Route exact path=\"/\" render={HomeComponent} />\r\n        <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n        <Route exact path=\"/debit\" render={DebitComponent} />\r\n        <Route exact path=\"/credit\" render={CreditComponent} />\r\n        {/* </div> */}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}