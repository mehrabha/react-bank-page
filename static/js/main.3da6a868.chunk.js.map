{"version":3,"sources":["Components/AccountBalance.js","Components/Home.js","Components/UserProfile.js","Components/Login.js","Components/infoBox.jsx","Components/debit.jsx","Components/credit.jsx","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","react_default","a","createElement","this","props","accountBalance","Component","Home","className","src","alt","debits","Components_AccountBalance","credits","react_router_dom","to","UserProfile","id","userName","memberSince","LogIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","updatedUser","objectSpread","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","react_router","onSubmit","htmlFor","type","onChange","required","React","Infobox","credit","description","amount","date","DebitPage","data","total","des","amo","key","desChange","_callee","ev","regenerator_default","wrap","_context","prev","next","console","log","stop","amoChange","_callee2","_context2","parseFloat","genkey","addcredit","_callee3","sum","i","_context3","push","length","updateAcc","updateDeb","debitBalance","axios","get","res","map","ct","Components_infoBox","onClick","CreditPage","componentDidMount","sent","_callee4","_context4","updateCred","creditBalance","App","CreditBalance","currentUser","_this2","logInInfo","newUser","input","basename","exact","path","render","Components_Login","assign","src_Components_Home","src_Components_UserProfile","debit","Components_credit","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3da6a868.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass AccountBalance extends Component{\n    render(){\n        return(\n            <div>\n              Balance: {this.props.accountBalance}\n            </div>\n        )\n    }\n}\n\nexport default AccountBalance;","import React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\nimport './Home.css';\n\nclass Home extends Component{\n    render(){\n        return(\n            <div className=\"Home\">\n                <img src= \"https://code.fb.com/wp-content/uploads/2016/02/gev5wqc6bdmxibegag-eayeaaaaabj0jaaab.jpg\" alt= \"bank\"/>\n                <h1>Bank of React</h1>\n                <p> Debit Total: {this.props.debits}</p>\n                <AccountBalance accountBalance={this.props.accountBalance}/>\n                <p> Credits Total: {this.props.credits}</p>\n                <Link to=\"/userProfile\">User Profile</Link>\n                <Link to=\"/debit\"> Debit</Link>\n                <Link to=\"/credit\"> Credit</Link>\n                \n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './UserProfile.css';\n\nclass UserProfile extends Component {\n    render(){\n        return(\n            <div id=\"userProfile\">\n              <h1>User Profile</h1>\n              <div>Username: {this.props.userName}</div>\n              <div>Member Since: {this.props.memberSince}</div>\n              <Link to=\"/\">Home</Link>\n            </div>\n        )\n    }\n}\n\nexport default UserProfile;","import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport './Login.css';\n\nclass LogIn extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            user: {\n                userName: '',\n                password: ''\n            },\n            redirect: false\n        }\n    }\n    handleChange = (e) => {\n        const updatedUser = {...this.state.user}\n        const inputField = e.target.name\n        const inputValue = e.target.value\n      updatedUser[inputField] = inputValue\n\n      this.setState({user: updatedUser})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.mockLogIn(this.state.user);\n        this.setState({redirect: true})\n    }\n\n    render() {\n        if(this.state.redirect) {\n            return(<Redirect to=\"/userProfile\"/>)\n        }\n        return (\n          <div className=\"LogIn\">\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"userName\">User Name: </label>\n                <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} required/>\n              </div>\n              <div>\n                <label htmlFor=\"password\">Password: </label>\n                <input type=\"password\" name=\"password\" required/>\n                {/*The min length fields are not working as intended\n                  Replaced with required*/}\n              </div>\n              <button>Log In</button>\n            </form>\n          </div>\n        )\n    }\n}\n\nexport default LogIn;","import React, { Component } from \"react\";\nimport \"./infoBox.css\";\n\nclass Infobox extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"boxbody\">\n        <div className=\"info\">{this.props.credit.description}</div>\n        <div className=\"info\">Amount: {this.props.credit.amount}</div>\n        <div className=\"info\">Date: {this.props.credit.date}</div>\n        {/* <div className=\"info\">Total Wages: ~{this.props.city.TotalWages}</div> */}\n      </div>\n    );\n  }\n}\n\nexport default Infobox;\n","import \"./credit.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Infobox from \"./infoBox\";\nimport {Link} from \"react-router-dom\";\n\nclass DebitPage extends Component {\n  state = { data: [], total: 0, des: \"\", amo: \"\", key: 7867 };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://moj-api.herokuapp.com/debits\");\n    await this.setState({ data: res.data });\n    let sum = 0;\n    for (let i = 0; i < this.state.data.length; i++) {\n      sum += this.state.data[i].amount; // ?? 怎么await for\n    }\n    await this.setState({ total: sum });\n    console.log(this.state.total);\n  }\n  desChange = async ev => {\n    await this.setState({ des: ev.target.value });\n    console.log(this.state.des);\n  };\n  amoChange = async ev => {\n    await this.setState({ amo: parseFloat(ev.target.value) });\n    console.log(this.state.amo);\n  };\n  genkey = () => {\n    this.state.key++;\n    return this.state.key;\n  };\n  addcredit = async ev => {\n    // console.log(typeof this.state.des);\n    if (this.state.amo && this.state.des) {\n      this.state.data.push({\n        amount: this.state.amo,\n        description: this.state.des,\n        date: \"2019-07-30T11:30:06.921Z\",\n        id: this.genkey()\n      });\n      await this.setState({ data: this.state.data });\n    }\n    let sum = 0;\n    for (let i = 0; i < this.state.data.length; i++) {\n      sum += this.state.data[i].amount; \n    }\n    await this.setState({ total: sum });\n    // console.log(this.state.data[3]);\n    this.props.updateAcc(this.props.accountBalance-this.state.amo);\n    this.props.updateDeb(this.props.debitBalance+parseFloat(this.state.amo));\n  };\n\n  render() {\n    return (\n      <div className=\"whole\">\n        <h1> Debit Score </h1>\n        <h3>Account Balance: {this.props.accountBalance}</h3>\n        <h3>Total Debits: {this.props.debitBalance}</h3>\n        {/* <Inputbar change={this.updateZip} search={this.search} /> */}\n\n        <div className=\"disbox\">\n          {/* {this.state.invalid && <h2>Invalid zip</h2>} */}\n          {this.state.data.length > 0 &&\n            this.state.data.map(ct => <Infobox key={ct.id} credit={ct} />)}\n        </div>\n        <div className=\"inputbox\">\n          <h6>Debit Description</h6>\n          <input onChange={this.desChange} type=\"text\" />\n          <h6>Debit Amount</h6>\n          <input onChange={this.amoChange} type=\"text\" />\n          <div>\n            <button onClick={this.addcredit}>Add Credit</button>\n            {/* 怎么视角自动跟踪 ！！ */}\n            <Link to=\"/\">Back to Homepage</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DebitPage;\n","import \"./credit.css\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Infobox from \"./infoBox\";\nimport {Link} from \"react-router-dom\";\n\nclass CreditPage extends Component {\n  state = { data: [], total: 0, des: \"\", amo: \"\", key: 666 };\n\n  componentDidMount = async () => {\n    const res = await axios.get(\"https://moj-api.herokuapp.com/credits\");\n    await this.setState({ data: res.data });\n    let sum = 0;\n    for (let i = 0; i < this.state.data.length; i++) {\n      sum += this.state.data[i].amount; // ?? 怎么await for\n    }\n    await this.setState({ total: sum });\n    console.log(this.state.total);\n  };\n  desChange = async ev => {\n    await this.setState({ des: ev.target.value });\n    console.log(this.state.des);\n  };\n  amoChange = async ev => {\n    await this.setState({ amo: parseFloat(ev.target.value) });\n    console.log(this.state.amo);\n  };\n  genkey = () => {\n    this.state.key++;\n    return this.state.key;\n  };\n  addcredit = async ev => {\n    // console.log(typeof this.state.des);\n    if (this.state.amo && this.state.des) {\n      this.state.data.push({\n        amount: this.state.amo,\n        description: this.state.des,\n        date: \"2019-07-30T11:30:06.921Z\",\n        id: this.genkey()\n      });\n      await this.setState({ data: this.state.data });\n    }\n    let sum = 0;\n    for (let i = 0; i < this.state.data.length; i++) {\n      sum += this.state.data[i].amount; \n    }\n    await this.setState({ total: sum });\n    // console.log(this.state.data[3]);\n    this.props.updateAcc(this.props.accountBalance-this.state.amo);\n    this.props.updateCred(this.props.creditBalance+parseFloat(this.state.amo));\n  };\n\n  render() {\n    console.log(this.props.creditBalance);\n    return (\n      <div className=\"whole\">\n        <h1>Credit</h1>\n        <h3>Account Balance: {this.props.accountBalance}</h3>\n        <h3>Total Credits: {this.props.creditBalance}</h3>\n        {/* <Inputbar change={this.updateZip} search={this.search} /> */}\n\n        <div className=\"disbox\">\n          {/* {this.state.invalid && <h2>Invalid zip</h2>} */}\n          {this.state.data.length > 0 &&\n            this.state.data.map(ct => <Infobox key={ct.id} credit={ct} />)}\n        </div>\n        <div className=\"inputbox\">\n          <h6>Credit Description</h6>\n          <input onChange={this.desChange} type=\"text\" />\n          <h6>Credit Amount</h6>\n          <input onChange={this.amoChange} type=\"text\" />\n          <div>\n            <button onClick={this.addcredit}>Add Credit</button>\n            {/* 怎么视角自动跟踪 ！！ */}\n            <Link to=\"/\">Back to Homepage</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreditPage;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport UserProfile from \"./Components/UserProfile\";\nimport LogIn from \"./Components/Login\";\nimport DebitPage from \"./Components/debit\";\nimport CreditPage from \"./Components/credit\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accountBalance: 14568.27,\n      debitBalance: 4255.99,\n      CreditBalance: 1998.27,\n      currentUser: {\n        userName: \"bob_loblaw\",\n        memberSince: \"08/23/99\"\n      }\n    };\n  }\n\n  \n\n  render() {\n    const HomeComponent = () => (\n      <Home\n        accountBalance={this.state.accountBalance}\n        debits={this.state.debitBalance}\n        credits={this.state.CreditBalance}\n      />\n    );\n    const UserProfileComponent = () => (\n      <UserProfile\n        userName={this.state.currentUser.userName}\n        memberSince={this.state.currentUser.memberSince}\n      />\n    );\n    const mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser };\n      newUser.userName = logInInfo.userName;\n      this.setState({ currentUser: newUser });\n    };\n    const LogInComponent = () => (\n      <LogIn\n        user={this.state.currentUser}\n        mockLogIn={mockLogIn}\n        {...this.props}\n      />\n    );\n\n    const updateAcc = (input) => {\n      this.setState({\n        accountBalance : input\n      })\n    }\n  \n    const updateDeb = (input) => {\n      this.setState({\n        debitBalance : input\n      })\n    }\n\n    const updateCred = (input) => {\n      this.setState({\n        CreditBalance : input\n      })\n    }\n    const DebitComponent = () => (\n      <DebitPage\n        debitBalance={this.state.debitBalance}\n        accountBalance={this.state.accountBalance}\n        updateAcc={updateAcc}\n        updateDeb={updateDeb}\n      />\n    );\n    console.log(this.state.CreditBalance);\n    const CreditComponent = () => (\n      <CreditPage\n        creditBalance={this.state.CreditBalance}\n        accountBalance={this.state.accountBalance}\n        updateAcc={updateAcc}\n        updateCred={updateCred}\n      />\n    );\n\n    return (\n      <Router basename=\"/react-bank-page\">\n        {/* <div> */}\n        <Route exact path=\"/login\" render={LogInComponent} />\n        <Route exact path=\"/\" render={HomeComponent} />\n        <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n        <Route exact path=\"/debit\" render={DebitComponent} />\n        <Route exact path=\"/credit\" render={CreditComponent} />\n        {/* </div> */}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}